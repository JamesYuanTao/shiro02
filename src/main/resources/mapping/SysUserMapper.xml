<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.mapper.SysUserMapper" >
  <resultMap id="BaseResultMap" type="com.zking.model.SysUser" >
    <constructor >
      <idArg column="userid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="PASSWORD" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="salt" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="createdate" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>

  <sql id="Base_Column_List" >
    userid, username, PASSWORD, salt, createdate
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_sys_user
    where userid = #{userid,jdbcType=INTEGER}
  </select>

  <select id="selectByUserName" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from t_sys_user where username=#{username}
  </select>
    <!--根据用户名获取角色-->
    <select id="getRoleByUserName" resultType="java.lang.String">
      select sr.rolename from t_sys_user su,t_sys_role sr,t_sys_user_role sur where su.username=#{userName} and su.userid=sur.userid and sr.roleid=sur.roleid
    </select>
    <!-- 根据用户名获取权限 -->
  <select id="getPermissionByUserName" resultType="java.lang.String">
    select sp.pername from t_sys_user su,t_sys_role sr,t_sys_user_role sur,t_sys_permission sp,t_sys_role_permission srp where
    su.username=#{userName} and su.userid=sur.userid and sr.roleid=sur.roleid and sr.roleid=srp.roleid and sp.perid=srp.perid
  </select>
  <select id="list" resultType="com.zking.model.SysUser">
    select <include refid="Base_Column_List"/> from t_sys_user
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_sys_user
    where userid = #{userid,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.zking.model.SysUser" >
    insert into t_sys_user (userid, username, PASSWORD, 
      salt, createdate)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.zking.model.SysUser" >
    insert into t_sys_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="createdate != null" >
        createdate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.zking.model.SysUser" >
    update t_sys_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where userid = #{userid,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.zking.model.SysUser" >
    update t_sys_user
    set username = #{username,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      createdate = #{createdate,jdbcType=TIMESTAMP}
    where userid = #{userid,jdbcType=INTEGER}
  </update>

</mapper>